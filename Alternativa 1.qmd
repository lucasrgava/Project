---
title: "Abordagem como um simples DBC"
author: "Lucas R. Gava, Iago Vieira"
format: html
editor: visual
---

# Pacotes

Pacotes requeridos no decorrer do código.

```{r message=FALSE, warning=FALSE}
library(gsheet) # importação dos dados
library(tidyverse) # manipulação dos dados
library(ggthemes) # Temas gráficos
library(plotly) # gráficos dinâmicos
library(epifitter) # utilizar a função AUDPC()
library(performance) # este e demais pacotes destinados a análise 
library(emmeans)
library(multcomp)
```

# Importando o banco de dados

```{r}
dados <- gsheet2tbl('https://docs.google.com/spreadsheets/d/18JYhRvnwob5L0kAOor9o22Y_AwLkD7XU/edit?gid=173826027#gid=173826027')
```

# Ajustando os dados

Antes de seguir com a análise dos dados, vamos criar uma nova variável resposta a partir da severidade das folhas 1, 2 e 3 das 3 plantas avaliadas. Essa nova variável será denominada severidade média.

```{r message=FALSE, warning=FALSE}
dados <- dados |> 
  mutate(sev.med = rowMeans(across(starts_with('sev_f')))) |> 
  dplyr::select(- starts_with('sev_f')) |> 
  group_by(treat, block, assessment) |> 
  summarise(sev_med = mean(sev.med))

dados$sev_med <- round(dados$sev_med, 2)
```

# Gráfico de dispersão

Observando a amplitude dos dados.

```{r warning=FALSE}
plot1 <- dados |> 
  ggplot(aes(x = treat, y = sev_med, color = treat)) + 
  geom_jitter(width = 0.2, size = 2.5, alpha = 0.7) +
  labs(x = ' ', y = 'Severidade (%)', color = ' ') +
  theme_classic() +
  theme(axis.text.x = element_blank(), text = element_text(size = 15)) + 
  ylim(0, 100) +
  geom_hline(yintercept = max(dados$sev_med), linetype = 3) +
  annotate(geom = 'text', y = 15, x = 4, label = '12%')

plot1
```

# Visualizando curvas de progresso

Como nossos dados foram coletados em 4 momentos diferentes, podemos criar um gráfico de pontos, em que, o eixo x receberá os momentos de avaliação e o eixo y a severidade média. As curvas geradas também são chamadas de curvas de progresso, que representam o progresso da epidemia no tempo.

```{r message=FALSE, warning=FALSE}
plot2 <- dados |> 
  group_by(treat, assessment) |> 
  summarise(med = mean(sev_med)) |> 
  ggplot(aes(x = assessment, y = med, color = treat)) +
  geom_point() + 
  geom_line(size = 1) +
  theme(text = element_text(size = 15)) +
  theme_classic() +
  labs(x = 'Avaliações', y = 'Severidade média (%)', color = 'Tratamentos')

  plot2
```

Visualizando as mesmas curvas em gráficos separados.

```{r message=FALSE, warning=FALSE}
dados |> 
  group_by(treat, assessment) |> 
  summarise(med = mean(sev_med)) |> 
  ggplot(aes(x = assessment, y = med)) +
  geom_jitter(data = dados, aes(y = sev_med), color = 'gray', alpha = 0.7, width = 0.1) +
  geom_line(size = 0.5) +
  geom_point(color = 'red') +
  theme_clean() +
  theme(text = element_text(size = 15), axis.title = element_text(size = 15)) +
  facet_wrap(~treat) +
  labs(x = 'Avaliações', y = 'Severidade média (%)', color = 'Tratamentos')
```

# Variáveis respostas

As variáveis respostas que serão analizadas aqui são a AACPD, Y máx e Produtividade (ton/ha).

## AACPD

Calculando AACPD.

```{r message=FALSE, warning=FALSE}
aacpd <- dados |> 
  group_by(treat, block) |> 
  summarise(aacpd = AUDPC(assessment, sev_med))
knitr::kable(aacpd)
```

```{r}
plot3 <- aacpd |> 
  group_by(treat) |> 
  summarise(med = mean(aacpd)) |> 
  ggplot(aes(x = treat, y = med)) +
  geom_col(fill = 'lightblue') +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), text = element_text(size = 15)) +
  labs(x = ' ', y = "AACPD")
plot3
```

## Y máx

Apenas vizualizando os gráficos anteriores, percebe-se que as epidemias se assemelham muito a um modelo exponencial. Isso facilita para a seleção do valor onde a intensidade da doença é máxima. No nosso caso, os valores de Y máx correspondem aos dados de severidade coletados na 4° avaliação. Portanto, basta filtrar essas linhas:

```{r}
y.max <- dados |> 
  filter(assessment == 4) |> 
  dplyr::select(-assessment)

knitr::kable(y.max)
```

## Produtividade

Importando dados de produtividade.

```{r}
prod <- gsheet2tbl('https://docs.google.com/spreadsheets/d/18JYhRvnwob5L0kAOor9o22Y_AwLkD7XU/edit?gid=1793405925#gid=1793405925')

prod <- prod |> 
  dplyr::select(treat, block, productivity)

knitr::kable(prod)
```

```{r}
plot4 <-  prod |> 
  group_by(treat) |> 
  summarise(prod = mean(productivity)) |> 
  ggplot(aes(treat, prod)) +
  geom_col(fill = 'lightblue') +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), text = element_text(size = 15)) +
  labs(x = ' ', y = "Produtividade (ton/ha)") +
  ylim(0, 60)

plot4
```

# Análise estatística

## Variável AACPD

### Testando as premissas

Antes de seguir com a análise paramétrica, é preciso testar as premissas de homogeneidade de variâncias e normalidade dos resíduos. As funções `check_heteroscedasticity()` e `check_normality()` do pacote **Performance**, são utilizadas para verificar isso. De modo geral, a hipótese de nulidade das premissas é que as variâncias são homogêneas e os resíduos normais. Nesse caso, esperamos que o resultado do teste **não** seja significativo, ou seja, p-valor \> 0,05. Após rodar o código temos como resultado p-valores \> 0,05, indicando a possibilidade de continuar com a análise paramétrica.

```{r}
m1 <- lm(aacpd ~ treat + block, aacpd)

check_heteroscedasticity(m1)
check_normality(m1)
```

### ANOVA

A ANOVA indicou que existe pelo menos um par de tratamentos que se diferem entre si pelo teste F ao nível de 5% de probabilidade. Seguimos agora para o teste de comparações múltiplas para distinguir quais são os tratamentos que se diferem.

```{r}
anova(m1)
```

### Teste de comparações múltiplas

O teste de Tukey é um teste de comparações múltiplas muito utilizado em experimentos agrícolas. Ele realiza as comparações múltiplas entre todos os tratamentos e distingue-os, possibilitando identificar quais foram os melhores e piores tratamentos. No entanto, para esta análise, não iremos adortar o teste de Tukey, mas sim, o teste de Estimativa das Médias Marginais (EMMs). Para isso utilizaremos a função `emmeans()` do pacore **emmeans**.

Como resultado do teste abaixo, observamos a formação de 4 grupos com bantante anbiguidade (sobreposição de grupos) entre as médias dos tratamentos. Como a variável testada é referente a área abaixo da curva de progresso, queremos identificar quais foram os tratamentos que apresentaram menores valores. Pois, são estes tratamentos que apresentaram um melhor controle da epidemia. A interpretação é simples, médias dos tratamentos seguidas pela mesma letra não se diferem entre si, pelo teste de Tukey, ao nível de 5% de probabilidade. Dessa forma, verificamos que os fungicidas **PRIORI XTRA** e **FOX** aplicados nos estádios **V6/V8 + VT** e em **V6/V8** se diferiram da **TESTEMUNHA**, mas não entre si. Quando os fungicidas foram aplicados somente no estádio **VT** não teve difereça da **TESTEMUNHA**.

Gerando uma informação mais prática quanto ao resultado, podemos concluir que, aplicando qualquer um dos fungicidas, quando o milho ainda está no seu estádio vegetativo (**V6/V8**), é a melhor alternativa para manejo de manchas foliares na cultura. Uma vez que, realizando duas aplicações nos estádios **V6/V8** e **VT** seria desperdício de recursos e contaminação desnecessária do meio ambiente.

```{r}
cld(emmeans(m1, ~ treat), Letters = letters)
```

## Variável Y máx

### Testando premissas

Agora a interpretação fica mais fácil. O resultado de p-valor \> 0,05 indica que podemos seguir com as análises.

```{r}
m2 <- lm(sev_med ~ treat + block, y.max)

check_heteroscedasticity(m2)
check_normality(m2)
```

### ANOVA

A ANOVA indicou que há diferença entre os tratamentos.

```{r}
anova(m2)
```

### Teste de comparações múltiplas

Semelhante ao observado no teste de comparações múltiplas da variável anterior, há grande anbiquidade entre os grupos formados. Com base nos resultados sobre a variável de intensidade máxima o melhor tratamento seria o **PRIORI XTRA** aplicado nos estádios **V6/V8** e **VT**.

```{r}
cld(emmeans(m2, ~ treat), Letters = letters)
```

## Variável de PRODUTIVIDADE

### Testando premissas

Premissas atendidas!

Seguimos para a ANOVA.

```{r}
m3 <- lm(productivity ~ treat + block, prod)

check_heteroscedasticity(m3)
check_normality(m3)
```

### ANOVA

O p-valor do teste F foi maior que 0,05. Logo, conclui-se que não existe diferença entre os tratamentos quando se analisa a variável **PRODUTIVIDADE**.

De maneira prática, podemos dizer que se o objetivo do ensaio foi controlar manchas foliares na cultura do milho e não houve diferença significativa entre as médias de produtividade, não realizar a aplicação de fungicida seria a melhor opção.

```{r}
anova(m3)
```

# Gráficos

Tratamentos que se diferiram da testemunha.

```{r}
plot2 <- plot2 + 
  annotate(geom = 'text', x = 4, y = 1.72, label = '*', size = 7) +
  annotate(geom = 'text', x = 4, y = 3.6, label = '*', size = 7)

ggplotly(plot2)
```

```{r}
plot3 <- plot3 +
  annotate(geom = 'text', x = 5, y = 1.7, label = '*', size = 7) +
  annotate(geom = 'text', x = 2, y = 3, label = '*', size = 7) +
  annotate(geom = 'text', x = 4, y = 3.8, label = '*', size = 7) +
  annotate(geom = 'text', x = 1, y = 4, label = '*', size = 7)

ggplotly(plot3)
```

```{r}
plot4 <- plot4 + 
  annotate(geom = 'text', x = 7, y = 49, label = 'ns', size = 5)

ggplotly(plot4)
```
